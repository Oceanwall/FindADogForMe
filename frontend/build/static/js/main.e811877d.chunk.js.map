{"version":3,"sources":["api_wrapper_functions/utilities.js","api_wrapper_functions/wrapper.js","Components/CustomNavbar.jsx","Components/MemberCard.jsx","Components/LogoCard.jsx","Components/LogoDeck.jsx","Components/About.jsx","Components/HomeCarousel.jsx","Components/Home.jsx","Components/PageComp.jsx","Components/DefaultImage.jsx","Components/ShelterCard.jsx","Components/InstanceCarousel.jsx","Components/DogCard.jsx","Components/ActivityCard.jsx","Components/BreedCard.jsx","Components/ShelterInstance.jsx","Components/Shelters.jsx","Components/DogInstance.jsx","Components/Dogs.jsx","Components/BreedInstance.jsx","Components/Breeds.jsx","Components/ActivityInstance.jsx","Components/Activities.jsx","Components/Error404.jsx","App.js","serviceWorker.js","index.js"],"names":["request","require","API_URL","perform_api_call","url","Promise","resolve","reject","method","error","response","body","Error","JSON","parse","build_query","model","id","name","latitude","longitude","range","arguments","length","undefined","page","queryString","queryObject","latitude_lower","op","val","latitude_upper","longitude_lower","longitude_upper","ll","stringify","lu","lol","lou","concat","getShelters","_callee","_args","C_Users_Matthew_Documents_Spring19_CS_373_findadogforme_frontend_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","abrupt","stop","_callee2","shelter_id","_context2","getBreeds","_callee3","_context3","_callee4","_args4","_context4","buildBreedActivityQuery","active","multipleArgs","filter_string","slice","join","_callee5","page_num","shelters_objects","shelter_promises","nearby_shelters","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","shelters_object","_context5","sent","total_pages","push","all","objects","Symbol","iterator","done","value","t0","return","finish","_callee6","breed_info","is_active","_context6","__webpack_exports__","getDogs","getActivities","getAllNearbyShelters","getBreedActivitiesWithLocation","utilities","default","getShelter","shelter_info","lat","lng","dog_list","dog_set","dog","breed_promises","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","breed_name","breeds","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","breed","Set","has","add","t1","t2","getShelterDogs","getDogBreed","_callee7","_context7","_callee8","shelter","_args8","_context8","_callee9","_context9","_callee10","_context10","_callee11","_context11","_callee12","_context12","getActivity","_callee13","_context13","getActivityBreeds","_callee14","activity","_context14","getActivityShelters","_callee15","_context15","_callee16","suitable_breeds","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","shelters","suitable_dogs","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_iterator5","_step5","dogs","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_iterator6","_step6","_context16","getShelterActivities","getShelterBreeds","getDog","getDogShelter","getDogActivities","getBreed","getBreedActivities","getBreedDogs","getBreedShelters","getActivityDogs","CustomNavbar","state","react_default","createElement","Navbar_default","bg","variant","expand","Brand","href","className","src","alt","Toggle","aria-controls","Collapse","Nav_default","Link","Form_default","inline","FormControl_default","type","placeholder","Button_default","Component","MemberCard","Card_default","style","width","height","Img","this","props","person","img","Body","Title","Text","align","bio","responsibility","commits","issues","tests","LogoCard","class","info","LogoDeck","Container_default","Row_default","Components_LogoCard","wrapper","About","total_commits","total_issues","people_info","bryanyang16","samarthdesai01","Triplestop","wc9245","oceanwall","BASE_URL","USERNAME","REPO_NAME","fetch","repo_response","json","repo_info","page_number","commits_response","commit_info","commit","author_name","temp","setState","console","log","issues_response","issue_info","issue","author","username","toLowerCase","load_commits","load_issues","pp","memberCards","Object","values","map","Components_MemberCard","CardDeck_default","scope","Components_LogoDeck","Col_default","target","rel","HomeCarousel","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSelect","direction","visiableOnSelect","slideNext","slider","slidePrev","goToSlide","autoplay","_changeIcon","_this$state","leftIcon","rightIcon","_this2","_this$state2","dist_react_bootstrap_carousel_default","animation","ref","r","version","Home","Components_HomeCarousel","PageComp","handleFirst","bind","assertThisInitialized","handlePrev","handleNext","handleLast","handleCustom","changePage","currentPage","maxPage","Pagination_default","First","onClick","Prev","Item","evt","Next","Last","DefaultImage","words","trim","split","initials","toUpperCase","Math","floor","random","background-color","ShelterCard","phone_number","parsePhoneNumberFromString","phone","formatNational","Components_DefaultImage","xs","city","address","InstanceCarousel","images","imagesArray","image","DogCard","shelter_name","then","getShelterName","card_image","image_1","age","size","ActivityCard","date","designation","is_free","location","BreedCard","group","temperament","min_lifespan","max_lifespan","min_height","max_height","ShelterInstance","shelterId","match","params","activity_list","breed_list","loaded","loadImages","imageArray","i","updateShelter","dogCards","Components_DogCard","breedCards","Components_BreedCard","activityCards","Components_ActivityCard","Components_InstanceCarousel","Shelters","info_loaded","pageNum","shelterList","isExact","shelterCards","Components_ShelterCard","Components_PageComp","react_router","path","component","DogInstance","dogId","description","img1","img2","img3","img4","nearby_activities","loaded_shelter","loaded_dog","loaded_activities","isLoaded","updateDog","react_router_dom","to","md","lg","Dogs","dogList","BreedInstance","breedId","max_weight","min_weight","image_2","image_3","image_4","shelter_list","updateBreed","Breeds","breedList","start","end","ActivityInstance","activityId","weather","loaded_activity","substring","updateActivity","Activities","activityList","Error404","App","Components_CustomNavbar","exact","NoMatch","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e811877d.chunk.js","sourcesContent":["const request = require('request');\r\nconst API_URL = \"https://api.findadogfor.me/api/\";\r\n\r\nfunction perform_api_call(url) {\r\n    return new Promise ((resolve, reject) => {\r\n        request({\r\n            \"url\": url,\r\n            \"method\": \"GET\",\r\n        }, (error, response, body) => {\r\n            if(error) {\r\n                reject(new Error('Unable to connect to API'));\r\n            } else {\r\n                resolve(JSON.parse(body));\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n// NOTE: range defaults to 0.5\r\nfunction build_query(model, id, name, latitude, longitude, range = 0.5, page) {\r\n    let queryString = '';\r\n    let queryObject = {};\r\n\r\n    // Add case for all params except page\r\n    if (id && !name && !latitude && !longitude && !page){\r\n        queryString+= '/' + id;\r\n    }\r\n    else if (name && !latitude && !longitude){\r\n        if(model === \"shelter\" || model === \"breed\"){\r\n            queryObject = {\r\n                name: \"name\",\r\n                op: \"eq\",\r\n                val: name,\r\n            }\r\n        } else if (model === \"activity\"){\r\n            queryObject = {\r\n                name: \"name\",\r\n                op: \"eq\",\r\n                val: name,\r\n            }\r\n        } else if (model == \"dog\") {\r\n            queryObject = {\r\n                name: \"breed\",\r\n                op: \"eq\",\r\n                val: name,\r\n            }\r\n        }\r\n        queryString = `?q={\"filters\":[${JSON.stringify(queryObject)}]}`;\r\n        if (page){\r\n            queryString += `&page=${page}`;\r\n        }\r\n    }\r\n    else if (latitude && longitude){\r\n        let latitude_lower = {\r\n            name:\"latitude\",\r\n            op:\"ge\",\r\n            val: latitude - range\r\n        };\r\n        let latitude_upper = {\r\n            name:\"latitude\",\r\n            op: \"le\",\r\n            val: latitude + range\r\n        };\r\n        let longitude_lower = {\r\n            name:\"longitude\",\r\n            op:\"ge\",\r\n            val: longitude - range\r\n        };\r\n        let longitude_upper = {\r\n            name:\"longitude\",\r\n            op: \"le\",\r\n            val: longitude + range\r\n        };\r\n\r\n        let ll = JSON.stringify(latitude_lower);\r\n        let lu = JSON.stringify(latitude_upper);\r\n        let lol = JSON.stringify(longitude_lower);\r\n        let lou = JSON.stringify(longitude_upper);\r\n\r\n        queryString = `?q={\"filters\":[${ll}, ${lu}, ${lol}, ${lou}]}`\r\n\r\n        if (page){\r\n            queryString += `&page=${page}`;\r\n        }\r\n\r\n    }\r\n    else {\r\n        queryString += `?page=${page}`;\r\n    }\r\n\r\n    return queryString;\r\n}\r\n\r\nasync function getShelters(id, latitude, longitude, range, page) {\r\n    let queryString = \"\";\r\n    if (arguments.length > 0){\r\n        queryString = build_query(\"shelter\", id, undefined, latitude, longitude, range, page);\r\n    }\r\n    return perform_api_call(`${API_URL}shelter${queryString}`);\r\n}\r\n\r\nasync function getDogs(id, shelter_id, range, page){\r\n    let queryString = \"\";\r\n    if (id){\r\n        queryString = `/${id}`;\r\n    }else if(shelter_id){\r\n        let queryObject = {\r\n            name:\"shelter_id\",\r\n            op:\"eq\",\r\n            val:id\r\n        }\r\n        queryString = `?q={\"filters\":[${JSON.stringify(queryObject)}]}`\r\n        if(page){\r\n            queryString += `&page=${page}`\r\n        }\r\n        return perform_api_call(`${API_URL}dog${queryString}`);\r\n    }else if (page){\r\n        queryString=`?page=${page}`;\r\n    }\r\n    return perform_api_call(`${API_URL}dog${queryString}`);\r\n}\r\n\r\nasync function getBreeds(name) {\r\n    let queryString = \"\";\r\n    if (name) {\r\n        queryString = build_query(\"breed\", undefined, name, undefined, undefined, undefined, undefined);\r\n    }\r\n    return perform_api_call(`${API_URL}breed${queryString}`);\r\n}\r\n\r\nasync function getActivities(id, name, latitude, longitude, range, page) {\r\n    let queryString = \"\";\r\n    if (arguments.length > 0){\r\n        queryString = build_query(\"activity\", id, name, latitude, longitude, range, page);\r\n    }\r\n    return perform_api_call(`${API_URL}activity${queryString}`);\r\n}\r\n\r\nfunction buildBreedActivityQuery(active, queryString, multipleArgs){\r\n    let filter_string = \"\";\r\n    if (active === true){\r\n        filter_string = '{\"name\" : \"is_active\", \"op\":\"eq\", \"val\": true}'\r\n    } else {\r\n        filter_string = '{\"name\" : \"is_active\", \"op\":\"eq\", \"val\": false}'\r\n    }\r\n    if(multipleArgs){\r\n        queryString = [queryString.slice(0, 15), filter_string,',', queryString.slice(15)].join('');\r\n    }else{\r\n        queryString = '?q={\"filters\":[' + filter_string + ']}'\r\n    }\r\n    return queryString;\r\n}\r\n\r\nasync function getAllNearbyShelters(latitude, longitude, range) {\r\n    let page_num = 1;\r\n    let shelters_objects = await getShelters(undefined, latitude, longitude, range, page_num);\r\n    let shelter_promises = [];\r\n    while (page_num < shelters_objects.total_pages && page_num < 3) {\r\n        ++page_num;\r\n        shelter_promises.push(getShelters(undefined, latitude, longitude, range, page_num));\r\n    }\r\n\r\n    shelter_promises = await Promise.all(shelter_promises);\r\n\r\n    let nearby_shelters = shelters_objects.objects;\r\n    for (let shelters_object of shelter_promises) {\r\n        nearby_shelters = nearby_shelters.concat(shelters_object.objects);\r\n    }\r\n\r\n    return nearby_shelters;\r\n}\r\n\r\nasync function getBreedActivitiesWithLocation(name, latitude, longitude, range, page) {\r\n    let multipleArgs = false;\r\n    let queryString = '';\r\n    if (latitude || longitude || range || page){\r\n        queryString = build_query(\"activity\", undefined, undefined, latitude, longitude, range, page);\r\n        multipleArgs = true;\r\n    }\r\n\r\n    let breed_info = await getBreeds(name);\r\n    let is_active = breed_info.objects[0].is_active;\r\n    queryString = buildBreedActivityQuery(is_active, queryString, multipleArgs);\r\n\r\n    return perform_api_call(`${API_URL}activity${queryString}`);\r\n}\r\n\r\nexport default {\r\n    perform_api_call,\r\n    build_query,\r\n    getShelters,\r\n    getDogs,\r\n    getBreeds,\r\n    getActivities,\r\n    buildBreedActivityQuery,\r\n    getAllNearbyShelters,\r\n    getBreedActivitiesWithLocation\r\n}\r\n","const utilities = require(\"./utilities\").default;\r\nconst API_URL = \"https://api.findadogfor.me/api/\";\r\n\r\n/*\r\n * NOTE: If you're not using a param, then you can simply ignore it.\r\n * Example:\r\n *      getShelter(id);\r\n * However, if you want to use a param, but there are unneeded params in the\r\n * way, then use undefined to ignore those params.\r\n * Example:\r\n *      getShelterActivities('TX1399\", undefined, 2);\r\n *\r\n * NOTE: range parameter default value is 0.5\r\n */\r\n\r\n/*\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nSHELTERS\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n*/\r\n\r\n// Get all shelters, or get a specific shelter.\r\nasync function getShelter(id, page) {\r\n    return utilities.getShelters(id, undefined, undefined, undefined, page);\r\n}\r\n\r\n// Get activities near a specific shelter.\r\nasync function getShelterActivities(id, range, page){\r\n    if (!id)\r\n     throw new Error(\"You must provide a shelter ID.\");\r\n\r\n    let shelter_info = await utilities.getShelters(id);\r\n    let lat = shelter_info.latitude;\r\n    let lng = shelter_info.longitude;\r\n    return utilities.getActivities('','',lat, lng, range, page);\r\n}\r\n\r\n// Get breeds hosted by a specific shelter.\r\nasync function getShelterBreeds(id){\r\n    if (!id)\r\n     throw new Error(\"You must provide a shelter ID.\");\r\n\r\n    let queryObject = {\r\n        name:\"shelter_id\",\r\n        op:\"eq\",\r\n        val:id\r\n    }\r\n    let queryString = `?q={\"filters\":[${JSON.stringify(queryObject)}]}`\r\n\r\n    let dog_list = (await utilities.perform_api_call(`${API_URL}dog${queryString}`)).objects;\r\n    let dog_set = new Set();\r\n    for (let dog of dog_list) {\r\n        if (!dog_set.has(dog[\"breed\"]))\r\n            dog_set.add(dog[\"breed\"]);\r\n    }\r\n\r\n    let breed_promises = [];\r\n    for (let breed_name of dog_set)\r\n        breed_promises.push(utilities.getBreeds(breed_name));\r\n\r\n    breed_promises = await Promise.all(breed_promises);\r\n    let breeds = [];\r\n    for (let breed of breed_promises) {\r\n        breeds.push(breed.objects[0]);\r\n    }\r\n    return breeds;\r\n}\r\n\r\n// Get dogs hosted by a specific shelter.\r\nasync function getShelterDogs(id, page){\r\n    if (!id)\r\n        throw new Error(\"You must provide a shelter ID.\");\r\n\r\n    let queryObject = {\r\n        name:\"shelter_id\",\r\n        op:\"eq\",\r\n        val:id\r\n    }\r\n    let queryString = `?q={\"filters\":[${JSON.stringify(queryObject)}]}`\r\n    if(page){\r\n        queryString += `&page=${page}`\r\n    }\r\n\r\n    return utilities.perform_api_call(`${API_URL}dog${queryString}`);\r\n}\r\n\r\n/*\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nDOGS\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n*/\r\n\r\n// Get all dogs, or get a specific dog.\r\nasync function getDog(id, page) {\r\n    return utilities.getDogs(id, undefined, undefined, page);\r\n}\r\n\r\n// Get a dog's breed.\r\nasync function getDogBreed(id){\r\n    if (!id)\r\n        throw new Error(\"You must provide a dog ID.\");\r\n    let dog = await utilities.getDogs(id);\r\n    return await utilities.getBreeds(dog.breed);\r\n}\r\n\r\n// Get a dog's shelter.\r\nasync function getDogShelter(id){\r\n    if (!id)\r\n        throw new Error(\"You must provide a dog ID.\");\r\n    let dog = await utilities.getDogs(id);\r\n    return await utilities.getShelters(dog.shelter_id);\r\n}\r\n\r\n// Get activities that would be suitable for a dog, near that dog's shelter.\r\nasync function getDogActivities(id, range = 0.5, page) {\r\n    if (!id)\r\n        throw new Error(\"You must provide a dog ID.\");\r\n\r\n    let dog = await utilities.getDogs(id);\r\n\r\n    let breed = await getDogBreed(id);\r\n    let is_active = breed.is_active;\r\n\r\n    let shelter = (await getShelter(dog.shelter_id));\r\n\r\n    return await utilities.getBreedActivitiesWithLocation(breed.name, shelter.latitude, shelter.longitude, range, page);\r\n}\r\n\r\n/*\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nBREEDS\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n*/\r\n\r\n// Get all breeds, or get a breed.\r\nasync function getBreed(name) {\r\n    return utilities.getBreeds(name);\r\n}\r\n\r\n// Get activities suitable for a breed.\r\nasync function getBreedActivities(name, page) {\r\n    if (!name)\r\n        throw new Error(\"You must provide a breed name.\");\r\n    return utilities.getBreedActivitiesWithLocation(name, undefined, undefined, undefined, page);\r\n}\r\n\r\n// Get dogs of a breed.\r\nasync function getBreedDogs(name, page) {\r\n    if (!name)\r\n        throw new Error(\"You must provide a breed name.\");\r\n    let queryString = utilities.build_query(\"dog\", undefined, name, undefined, undefined, undefined, page);\r\n    return utilities.perform_api_call(`${API_URL}dog${queryString}`);\r\n}\r\n\r\n// Get (up to) 6 shelters that host some breed.\r\nasync function getBreedShelters(name) {\r\n    return utilities.perform_api_call(`${API_URL}breed/shelter?breed=` + name);\r\n}\r\n\r\n/*\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nACTIVITIES\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n*/\r\n\r\n// Get all activities, or get an activity.\r\nasync function getActivity(id, page) {\r\n    return utilities.getActivities(id, undefined, undefined, undefined, undefined, page);\r\n}\r\n\r\n// Get all breeds suitable for an activity.\r\nasync function getActivityBreeds(id) {\r\n    if (!id)\r\n        throw new Error(\"You must provide an activity ID.\");\r\n    let activity = await getActivity(id);\r\n    let queryString = utilities.buildBreedActivityQuery(activity.is_active, \"\", false);\r\n    return utilities.perform_api_call(`${API_URL}breed${queryString}`);\r\n}\r\n\r\n// Get shelters located near an activity.\r\nasync function getActivityShelters(id, range, page) {\r\n    if (!id)\r\n        throw new Error(\"You must provide an activity ID.\");\r\n    let activity = await getActivity(id);\r\n    return utilities.getShelters(undefined, activity.latitude, activity.longitude, range);\r\n}\r\n\r\n// Get (up to) 12 dogs suitable for an activity located in shelters near the activity.\r\nasync function getActivityDogs(id, range) {\r\n    if (!id)\r\n        throw new Error(\"You must provide an activity ID.\");\r\n    let breeds = (await getActivityBreeds(id)).objects;\r\n    let suitable_breeds = new Set();\r\n    for (let breed of breeds)\r\n        suitable_breeds.add(breed.name);\r\n    let shelters = (await getActivityShelters(id, range)).objects;\r\n\r\n    let suitable_dogs = [];\r\n    for (let shelter of shelters) {\r\n        let dogs = (await getShelterDogs(shelter.id)).objects;\r\n        for (let dog of dogs) {;\r\n            if (suitable_breeds.has(dog.breed)) {\r\n                suitable_dogs.push(dog);\r\n                if (suitable_dogs.length >= 12) {\r\n                    return suitable_dogs;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return suitable_dogs;\r\n}\r\n\r\nexport default {\r\n    getShelter,\r\n    getShelterActivities,\r\n    getShelterBreeds,\r\n    getShelterDogs,\r\n    getDog,\r\n    getDogBreed,\r\n    getDogShelter,\r\n    getDogActivities,\r\n    getBreed,\r\n    getBreedActivities,\r\n    getBreedDogs,\r\n    getBreedShelters,\r\n    getActivity,\r\n    getActivityBreeds,\r\n    getActivityShelters,\r\n    getActivityDogs\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass CustomNavbar extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" id=\"general-navbar\">\r\n        <Navbar.Brand href=\"/\">\r\n          <img className=\"mr-2\" src=\"/favicon.ico\" alt=\"\" />\r\n          {\"Find a Dog for Me\"}\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n            <Nav.Link href=\"/shelters\">Shelters</Nav.Link>\r\n            <Nav.Link href=\"/dogs\">Dogs</Nav.Link>\r\n            <Nav.Link href=\"/breeds\">Breeds</Nav.Link>\r\n            <Nav.Link href=\"/activities\">Activities</Nav.Link>\r\n            <Nav.Link href=\"/about\">About</Nav.Link>\r\n          </Nav>\r\n          <Nav className=\"justify-content-end\">\r\n            <Form inline className=\"justify-content-center col-xs-6\">\r\n              <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n              <Button variant=\"outline-primary\" className=\"mt-2 mt-sm-0\">Search</Button>\r\n            </Form>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomNavbar;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"../styles/MemberCard.css\";\r\n\r\nclass MemberCard extends Component {\r\n  render() {\r\n    return (\r\n      <Card style={{ width: \"18rem\", height: \"43rem\" }}>\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={this.props.person.img}\r\n          style={{ width: \"auto\", height: \"300px\" }}\r\n        />\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <b>{this.props.person.name}</b>\r\n          </Card.Title>\r\n          <Card.Text>\r\n            <p align=\"left\">\r\n              <b>Biography:</b> {this.props.person.bio}\r\n            </p>\r\n            <p align=\"left\">\r\n              <b> Responsibility: </b>\r\n              {this.props.person.responsibility}\r\n            </p>\r\n            <p align=\"left\">\r\n              <b>Commits: </b>\r\n              {this.props.person.commits}\r\n            </p>\r\n            <p align=\"left\">\r\n              <b>Issues:</b> {this.props.person.issues}\r\n            </p>\r\n            <p align=\"left\">\r\n              <b>Unit Tests: </b>\r\n              {this.props.person.tests}\r\n            </p>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MemberCard;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/LogoCard.css\";\r\n\r\nclass LogoCard extends Component {\r\n  render() {\r\n    return (\r\n      <div class=\"logo-container\">\r\n        <img src={this.props.img} class=\"logo-image\" alt=\"logo\" />\r\n        <div class=\"overlay\">\r\n          <div class=\"logo-text\">{this.props.info}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogoCard;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/LogoDeck.css\";\r\nimport LogoCard from \"./LogoCard\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nclass LogoDeck extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Row className=\"logo-deck\">\r\n            <LogoCard\r\n              img=\"/images/bootstrap.png\"\r\n              info=\"Used for front-end styling\"\r\n            />\r\n            <LogoCard\r\n              img=\"/images/aws.png\"\r\n              info=\"Used to host website in the cloud\"\r\n            />\r\n            <LogoCard\r\n              img=\"/images/docker.png\"\r\n              info=\"Used to create containers for frontend/backend stacks\"\r\n            />\r\n            <LogoCard\r\n              img=\"/images/gitlab.png\"\r\n              info=\"Used for version control and project management\"\r\n            />\r\n            <LogoCard\r\n              img=\"/images/postman.png\"\r\n              info=\"Used for API development and testing\"\r\n            />\r\n            <LogoCard\r\n              img=\"/images/react.png\"\r\n              info=\"Used for for frontend development\"\r\n            />\r\n            <LogoCard\r\n              img=\"/images/namecheap.png\"\r\n              info=\"Used to obtain domain name\"\r\n            />\r\n            <LogoCard\r\n              img=\"/images/selenium.png\"\r\n              info=\"Used to create accpectance tests of GUI\"\r\n            />\r\n            <LogoCard\r\n              img=\"/images/mocha.png\"\r\n              info=\"Used to create unit tests of JavaScript code\"\r\n            />\r\n            <LogoCard\r\n              img=\"/images/chai.png\"\r\n              info=\"Used to create unit tests of JavaScript code\"\r\n            />\r\n            <LogoCard img=\"/images/flask.png\" info=\"Python web framework\" />\r\n            <LogoCard img=\"/images/black.png\" info=\"Code formatter\" />\r\n            <LogoCard img=\"/images/babel.png\" info=\"JavaScript compiler\" />\r\n            <LogoCard\r\n              img=\"/images/sqlalchemy.png\"\r\n              info=\"SQL mapper for Python\"\r\n            />\r\n            <LogoCard\r\n              img=\"/images/postgresql.png\"\r\n              info=\"Relational database management system\"\r\n            />\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogoDeck;\r\n","import React, { Component } from \"react\";\r\nimport MemberCard from \"./MemberCard\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport LogoDeck from \"./LogoDeck\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport \"../styles/About.css\";\r\nconst wrapper = require(\"../api_wrapper_functions/wrapper.js\").default;\r\n\r\nclass About extends Component {\r\n  state = {\r\n    total_commits: 0,\r\n    total_issues: 0,\r\n    people_info: {\r\n      bryanyang16: {\r\n        name: \"Bryan Yang\",\r\n        bio:\r\n          \"Sophomore computer science student at UT who likes sports, music, and good food\",\r\n        responsibility: \"Front-end engineer\",\r\n        commits: 0,\r\n        issues: 0,\r\n        tests: 0,\r\n        img: \"/images/bryan.jpg\"\r\n      },\r\n      samarthdesai01: {\r\n        name: \"Samarth Desai\",\r\n        bio:\r\n          \"Just another UTCS Sophomore really into junk food, video games, and getting his Writing Flag\",\r\n        responsibility: \"Worked mainly on the backend portion of the project\",\r\n        commits: 0,\r\n        issues: 0,\r\n        tests: 168,\r\n        img: \"/images/samarth.jpg\"\r\n      },\r\n      Triplestop: {\r\n        name: \"Daniel Ho\",\r\n        bio: \"UTCS Senior, loves to travel and play video games\",\r\n        responsibility: \"Front-end\",\r\n        commits: 0,\r\n        issues: 0,\r\n        tests: 0,\r\n        img: \"/images/daniel.png\"\r\n      },\r\n      wc9245: {\r\n        name: \"Keven Chen\",\r\n        bio: \"Another Asian sophomore UTCS major who likes to laze around...\",\r\n        responsibility: \" I work on frontend stuff.\",\r\n        commits: 0,\r\n        issues: 0,\r\n        tests: 0,\r\n        img: \"/images/keven.jpg\"\r\n      },\r\n      oceanwall: {\r\n        name: \"Matthew Zhao\",\r\n        bio:\r\n          \"Sophomore at UT CS (duh), likes basketball and violin, certified as the worst member of the UT Badminton Club.\",\r\n        responsibility:\r\n          \"Currently a Fullstack Engineer, primarily responsible for Backend.\",\r\n        commits: 0,\r\n        issues: 0,\r\n        tests: 33,\r\n        img: \"/images/matthew.jpg\"\r\n      }\r\n    },\r\n    BASE_URL: \"https://gitlab.com/api/v4/projects/\",\r\n    USERNAME: \"oceanwall\",\r\n    REPO_NAME: \"findadogforme\"\r\n  };\r\n\r\n  async load_commits() {\r\n    let repo_response = await fetch(\r\n      `${this.state.BASE_URL}${this.state.USERNAME}%2F${this.state.REPO_NAME}`\r\n    );\r\n    let repo_info = await repo_response.json();\r\n    let page_number = 1;\r\n    let commits_response = await fetch(\r\n      `${this.state.BASE_URL}${\r\n        repo_info.id\r\n      }/repository/commits?per_page=100&page=` + page_number\r\n    );\r\n    let commit_info = await commits_response.json();\r\n\r\n    let commits = 0;\r\n\r\n    do {\r\n      for (let commit of commit_info) {\r\n        let name = commit.author_name;\r\n        if (name === \"Bryan Yang\" || name === \"bryanyang16\") {\r\n          let temp = this.state.people_info;\r\n          temp[\"bryanyang16\"].commits += 1;\r\n          this.setState({ people_info: temp });\r\n          commits++;\r\n        } else if (name === \"Keven Chen\" || name === \"wc9245\") {\r\n          let temp = this.state.people_info;\r\n          temp[\"wc9245\"].commits += 1;\r\n          this.setState({ people_info: temp });\r\n          commits++;\r\n        } else if (name === \"Matthew Zhao\" || name === \"oceanwall\") {\r\n          let temp = this.state.people_info;\r\n          temp[\"oceanwall\"].commits += 1;\r\n          this.setState({ people_info: temp });\r\n          commits++;\r\n        } else if (name === \"Samarth Desai\" || name === \"SamarthDesai01\") {\r\n          let temp = this.state.people_info;\r\n          temp[\"samarthdesai01\"].commits += 1;\r\n          this.setState({ people_info: temp });\r\n          commits++;\r\n        } else if (name === \"Daniel Ho\" || name === \"Triplestop\") {\r\n          let temp = this.state.people_info;\r\n          temp[\"Triplestop\"].commits += 1;\r\n          this.setState({ people_info: temp });\r\n          commits++;\r\n        } else {\r\n          console.log(\"Unknown commit author: \" + commit.author_name);\r\n        }\r\n      }\r\n\r\n      ++page_number;\r\n      commits_response = await fetch(\r\n        `${this.state.BASE_URL}${\r\n          repo_info.id\r\n        }/repository/commits?per_page=100&page=` + page_number\r\n      );\r\n      commit_info = await commits_response.json();\r\n    } while (commit_info.length > 0);\r\n    this.setState({ total_commits: commits });\r\n  }\r\n\r\n  async load_issues() {\r\n    let repo_response = await fetch(\r\n      `${this.state.BASE_URL}${this.state.USERNAME}%2F${this.state.REPO_NAME}`\r\n    );\r\n    let repo_info = await repo_response.json();\r\n    let page_number = 1;\r\n    let issues_response = await fetch(\r\n      `${this.state.BASE_URL}${repo_info.id}/issues?per_page=100&page=` +\r\n        page_number\r\n    );\r\n    let issue_info = await issues_response.json();\r\n\r\n    let total_issues = 0;\r\n\r\n    do {\r\n      for (let issue of issue_info) {\r\n        let name = issue.author.username.toLowerCase();\r\n        if (name === \"bryanyang16\") {\r\n          let temp = this.state.people_info;\r\n          temp[name].issues += 1;\r\n          this.setState({ people_info: temp });\r\n          total_issues++;\r\n        } else if (name === \"oceanwall\") {\r\n          let temp = this.state.people_info;\r\n          temp[name].issues += 1;\r\n          this.setState({ people_info: temp });\r\n          total_issues++;\r\n        } else if (name === \"samarthdesai01\") {\r\n          let temp = this.state.people_info;\r\n          temp[name].issues += 1;\r\n          this.setState({ people_info: temp });\r\n          total_issues++;\r\n        } else if (name === \"wc9245\") {\r\n          let temp = this.state.people_info;\r\n          temp[name].issues += 1;\r\n          this.setState({ people_info: temp });\r\n          total_issues++;\r\n        } else if (name === \"Triplestop\") {\r\n          let temp = this.state.people_info;\r\n          temp[name].issues += 1;\r\n          this.setState({ people_info: temp });\r\n          total_issues++;\r\n        } else {\r\n          console.log(\"Unknown issue author: \" + issue.author.username);\r\n        }\r\n      }\r\n\r\n      ++page_number;\r\n      issues_response = await fetch(\r\n        `${this.state.BASE_URL}${repo_info.id}/issues?per_page=100&page=` +\r\n          page_number\r\n      );\r\n      issue_info = await issues_response.json();\r\n    } while (issue_info.length > 0);\r\n\r\n    this.setState({ total_issues: total_issues });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.load_commits();\r\n    this.load_issues();\r\n\r\n    let pp = await wrapper.getActivity();\r\n    console.log(pp);\r\n  }\r\n\r\n  render() {\r\n    let memberCards = Object.values(this.state.people_info).map(person => {\r\n      return (\r\n        <div className=\"mx-auto col-md-auto offset-md-0 col-auto offset-1 mt-2\">\r\n          <MemberCard person={person} />\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <Container id=\"desc-motivation\">\r\n          <h2 class=\"text-center title-text\">Description and Motivation</h2>\r\n          <p class=\"mt-3\" align=\"left\">\r\n            As shelters become increasingly crowded at alarming rates, it's\r\n            become clear that the adoption process must be optimized. Our intent\r\n            is to go beyond simple data aggregation in facilitating the adoption\r\n            of dogs from shelters.\r\n          </p>\r\n          <p align=\"left\">\r\n            We aim to provide a simple, yet powerful pet recommendation tool to\r\n            match owners with specific breeds and dogs. By asking a user for\r\n            their preferences, we narrow down their opinions and find their\r\n            perfect match.\r\n          </p>\r\n          <p align=\"left\">\r\n            Moreover, to further encourage prospective adopters, we promote a\r\n            wide range of activities that can be performed with their new furry\r\n            companions, such as nearby state and national parks and events\r\n            happening in nearby locations.\r\n          </p>\r\n        </Container>\r\n\r\n        <h2 class=\"text-center mt-4 title-text\">Members</h2>\r\n        <Container id=\"members\">\r\n          <CardDeck>\r\n            <div class=\"card-deck\">{memberCards}</div>\r\n          </CardDeck>\r\n        </Container>\r\n\r\n        <table class=\"table table-striped mt-5\">\r\n          <thead>\r\n            <tr class=\"text-center\">\r\n              <th scope=\"col\">Total # of Commits</th>\r\n              <th scope=\"col\">Total # of Issues</th>\r\n              <th scope=\"col\">Total # of Unit Tests</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr class=\"text-center\">\r\n              <td id=\"Total-Commits\">{this.state.total_commits}</td>\r\n              <td id=\"Total-Issues\">{this.state.total_issues}</td>\r\n              <td id=\"Total-UT\">201</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <h2 class=\"text-center mt-4 title-text\">Tools</h2>\r\n\r\n        <LogoDeck />\r\n\r\n        <br />\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <h2 class=\"text-center title-text\">Data Sources</h2>\r\n              <div class=\"text-center\">\r\n                <a href=\"https://www.petfinder.com/developers/api-docs\">\r\n                  <div class=\"data-sources-text\">Petfinder</div>\r\n                </a>\r\n              </div>\r\n              <div class=\"text-center mt-2\">\r\n                <a href=\"https://thedogapi.com/\">\r\n                  <div class=\"data-sources-text\">TheDogAPI</div>\r\n                </a>\r\n              </div>\r\n              <div class=\"text-center mt-2\">\r\n                <a href=\"https://dog.ceo/dog-api/documentation/\">\r\n                  <div class=\"data-sources-text\">DogAPI</div>\r\n                </a>\r\n              </div>\r\n              <div class=\"text-center mt-2\">\r\n                <a href=\"https://www.eventbrite.com/platform/docs/introduction\">\r\n                  <div class=\"data-sources-text\">Eventbrite</div>\r\n                </a>\r\n              </div>\r\n              <div class=\"text-center mt-2\">\r\n                <a href=\"https://www.meetup.com/meetup_api/\">\r\n                  <div class=\"data-sources-text\">Meetup</div>\r\n                </a>\r\n              </div>\r\n              <div class=\"text-center mt-2\">\r\n                <a href=\"https://www.nps.gov/subjects/developer/api-documentation.htm\">\r\n                  <div class=\"data-sources-text\">National Park Service</div>\r\n                </a>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <h2>\r\n                <div class=\"text-center doc-text\">GitLab URL</div>\r\n                <a\r\n                  href=\"https://gitlab.com/oceanwall/findadogforme\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <div class=\"url-text\">Find A Dog For Me</div>\r\n                </a>\r\n              </h2>\r\n              <br />\r\n              <h2>\r\n                <div class=\"text-center doc-text\">Postman API URL:</div>\r\n                <a\r\n                  href=\"https://documenter.getpostman.com/view/6754951/S11KQJxc\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <div class=\"url-text\">Documentation</div>\r\n                </a>\r\n              </h2>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/HomeCarousel.css\";\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\nimport Carousel from \"react-bootstrap-carousel\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nclass HomeCarousel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      autoplay: true\r\n    };\r\n  }\r\n  onSelect = (active, direction) => {\r\n    console.log(`active=${active} && direction=${direction}`);\r\n  };\r\n  visiableOnSelect = active => {\r\n    console.log(`visiable onSelect active=${active}`);\r\n  };\r\n  slideNext = () => {\r\n    this.slider.slideNext();\r\n  };\r\n  slidePrev = () => {\r\n    this.slider.slidePrev();\r\n  };\r\n  goToSlide = () => {\r\n    this.slider.goToSlide(4);\r\n  };\r\n  autoplay = () => {\r\n    this.setState({ autoplay: !this.state.autoplay });\r\n  };\r\n  _changeIcon = () => {\r\n    let { leftIcon, rightIcon } = this.state;\r\n    leftIcon = leftIcon ? undefined : <span className=\"fa fa-glass\" />;\r\n    rightIcon = rightIcon ? undefined : <span className=\"fa fa-music\" />;\r\n    this.setState({ leftIcon, rightIcon });\r\n  };\r\n\r\n  render() {\r\n    let { leftIcon, rightIcon } = this.state;\r\n    return (\r\n      <div className=\"container-fluid\" id=\"carousel-container\">\r\n        <Row>\r\n          <Col>\r\n            <Carousel\r\n              animation={true}\r\n              autoplay={this.state.autoplay}\r\n              leftIcon={leftIcon}\r\n              rightIcon={rightIcon}\r\n              onSelect={this.onSelect}\r\n              ref={r => (this.slider = r)}\r\n              version={4}\r\n            >\r\n              <img\r\n                className=\"Carousel-image\"\r\n                src=\"/images/dog1.jpg\"\r\n                alt=\"home-carousel-img-1\"\r\n              />\r\n\r\n              <img\r\n                className=\"Carousel-image\"\r\n                src=\"/images/dog2.jpeg\"\r\n                alt=\"home-carousel-img-2\"\r\n              />\r\n\r\n              <img\r\n                className=\"Carousel-image\"\r\n                src=\"/images/dog3.jpg\"\r\n                alt=\"home-carousel-img-3\"\r\n              />\r\n            </Carousel>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeCarousel;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport HomeCarousel from \"./HomeCarousel\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeCarousel />\r\n        <br />\r\n        <Button href=\"/dogs\">Find a Friend!</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\nimport \"../styles/PageComp.css\";\r\n\r\nclass PageComp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleFirst = this.handleFirst.bind(this);\r\n    this.handlePrev = this.handlePrev.bind(this);\r\n    this.handleNext = this.handleNext.bind(this);\r\n    this.handleLast = this.handleLast.bind(this);\r\n    this.handleCustom = this.handleCustom.bind(this);\r\n  }\r\n  handleFirst() {\r\n    this.props.changePage(1);\r\n  }\r\n  handlePrev() {\r\n    this.props.changePage(this.props.currentPage - 1);\r\n  }\r\n  handleNext() {\r\n    this.props.changePage(this.props.currentPage + 1);\r\n  }\r\n  handleLast() {\r\n    this.props.changePage(this.props.maxPage);\r\n  }\r\n  handleCustom(page) {\r\n    this.props.changePage(page);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"page-comp\">\r\n        <Pagination>\r\n          {this.props.currentPage > 1 && [\r\n            <Pagination.First onClick={this.handleFirst} />,\r\n            <Pagination.Prev onClick={this.handlePrev} />,\r\n            <Pagination.Item\r\n              onClick={evt =>\r\n                this.handleCustom(this.props.currentPage - 1, evt)\r\n              }\r\n            >\r\n              {this.props.currentPage - 1}\r\n            </Pagination.Item>\r\n          ]}\r\n          <Pagination.Item active>{this.props.currentPage}</Pagination.Item>\r\n          {this.props.maxPage > this.props.currentPage && [\r\n            <Pagination.Item\r\n              onClick={evt =>\r\n                this.handleCustom(this.props.currentPage + 1, evt)\r\n              }\r\n            >\r\n              {this.props.currentPage + 1}\r\n            </Pagination.Item>,\r\n            <Pagination.Next onClick={this.handleNext} />,\r\n            <Pagination.Last onClick={this.handleLast} />\r\n          ]}\r\n        </Pagination>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageComp;\r\n","import React, { Component } from \"react\";\nimport \"../styles/DefaultImage.css\"\n\nclass DefaultImage extends Component {\n    render() {\n      let words = this.props.name.trim().split(\" \");\n      let initials = \"\";\n      if (words.length > 1) {\n        initials = words[0][0] + words[1][0];\n      }\n      else {\n        initials = words[0][0];\n      }\n      initials = initials.toUpperCase();\n\n      let style;\n      switch(Math.floor(Math.random() * 5)) {\n        case 0:\n          style = {\"background-color\": \"#e0efc2\"};\n          break;\n        case 1:\n          style = {\"background-color\": \"#c1f4f0\"};\n          break;\n        case 2:\n          style = {\"background-color\": \"#f4e1c0\"};\n          break;\n        case 3:\n          style = {\"background-color\": \"#efc6bf\"};\n          break;\n        case 4:\n          style = {\"background-color\": \"#ddbbea\"};\n          break;\n      }\n\n\n      return (\n        <div class=\"default-image-wrapper\" style={style}>\n          {initials}\n        </div>\n      );\n    }\n}\nexport default DefaultImage\n","import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"../styles/ShelterCard.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DefaultImage from \"./DefaultImage\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { parsePhoneNumberFromString } from 'libphonenumber-js'\r\n\r\nclass ShelterCard extends Component {\r\n  render() {\r\n    let phone_number = parsePhoneNumberFromString(\"+1\" + this.props.shelter.phone);\r\n    if (!phone_number)\r\n      phone_number = this.props.shelter.phone;\r\n    else\r\n      phone_number = phone_number.formatNational();\r\n\r\n    return (\r\n      <Card style={{ width: \"18rem\", height: \"35rem\" }} className=\"mt-4\">\r\n        <DefaultImage name={this.props.shelter.name} />\r\n        <Card.Body>\r\n          <Card.Title className=\"cutoff\">{this.props.shelter.name}</Card.Title>\r\n          <Card.Text>\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  <p align=\"left\">\r\n                    <b>City:</b>\r\n                  </p>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <p align=\"right\">{this.props.shelter.city}</p>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <p align=\"left\">\r\n                    <b>State:</b>\r\n                  </p>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <p align=\"right\">{this.props.shelter.state}</p>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <p align=\"left\">\r\n                    <b>Phone:</b>\r\n                  </p>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <p align=\"right\">\r\n                    {phone_number\r\n                      ? phone_number\r\n                      : \"None Provided\"}\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <p align=\"left\">\r\n                    <b>Address:</b>\r\n                  </p>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <p align=\"right\">\r\n                    {this.props.shelter.address\r\n                      ? this.props.shelter.address\r\n                      : \"None Provided\"}\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Button href={`/shelters/${this.props.shelter.id}`}>\r\n                    Learn More\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShelterCard;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/InstanceCarousel.css\";\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\nimport Carousel from \"react-bootstrap-carousel\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nclass InstanceCarousel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      autoplay: true\r\n    };\r\n  }\r\n  onSelect = (active, direction) => {\r\n    console.log(`active=${active} && direction=${direction}`);\r\n  };\r\n  visiableOnSelect = active => {\r\n    console.log(`visiable onSelect active=${active}`);\r\n  };\r\n  slideNext = () => {\r\n    this.slider.slideNext();\r\n  };\r\n  slidePrev = () => {\r\n    this.slider.slidePrev();\r\n  };\r\n  goToSlide = () => {\r\n    this.slider.goToSlide(4);\r\n  };\r\n  autoplay = () => {\r\n    this.setState({ autoplay: !this.state.autoplay });\r\n  };\r\n  _changeIcon = () => {\r\n    let { leftIcon, rightIcon } = this.state;\r\n    leftIcon = leftIcon ? undefined : <span className=\"fa fa-glass\" />;\r\n    rightIcon = rightIcon ? undefined : <span className=\"fa fa-music\" />;\r\n    this.setState({ leftIcon, rightIcon });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.images);\r\n    let { leftIcon, rightIcon } = this.state;\r\n    let imagesArray = this.props.images.map(image => {\r\n      return (\r\n        <img\r\n          className=\"Carousel-instance-image\"\r\n          src={image}\r\n          alt=\"instance-carousel-img\"\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col>\r\n            <Carousel\r\n              animation={true}\r\n              autoplay={this.state.autoplay}\r\n              leftIcon={leftIcon}\r\n              rightIcon={rightIcon}\r\n              onSelect={this.onSelect}\r\n              ref={r => (this.slider = r)}\r\n              version={4}\r\n            >\r\n              {imagesArray}\r\n            </Carousel>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InstanceCarousel;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"../styles/DogCard.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport DefaultImage from \"./DefaultImage\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst wrapper = require(\"../api_wrapper_functions/wrapper.js\").default;\r\n\r\nclass DogCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shelter_name: \"\"\r\n    };\r\n  }\r\n  getShelterName() {\r\n    let id = this.props.dog.shelter_id;\r\n    wrapper.getShelter(id).then(response => {\r\n      this.setState({ shelter_name: response[\"name\"] });\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.getShelterName();\r\n  }\r\n  render() {\r\n    let card_image;\r\n    if (this.props.dog.image_1) {\r\n      card_image = (\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={this.props.dog.image_1}\r\n          style={{ width: \"auto\", height: \"300px\" }}\r\n        />\r\n      );\r\n    } else {\r\n      card_image = <DefaultImage name={this.props.dog.name} />;\r\n    }\r\n\r\n    return (\r\n      <Card style={{ width: \"18rem\", height: \"40rem\" }} className=\"mt-4\">\r\n        {card_image}\r\n        <Card.Body>\r\n          <Card.Title>{this.props.dog.name}</Card.Title>\r\n          <Card.Text>\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  <p align=\"left\">\r\n                    <b>Shelter:</b>\r\n                  </p>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <p align=\"right\" className=\"cutoff\">\r\n                    {this.state.shelter_name}\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <p align=\"left\">\r\n                    <b>Breed:</b>\r\n                  </p>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <p align=\"right\" className=\"capitalize cutoff\">\r\n                    {this.props.dog.breed}\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <p align=\"left\">\r\n                    <b>Age:</b>\r\n                  </p>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <p align=\"right\">{this.props.dog.age}</p>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <p align=\"left\">\r\n                    <b>Size:</b>\r\n                  </p>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <p align=\"right\">{this.props.dog.size}</p>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Button href={`/dogs/${this.props.dog.id}`}>\r\n                    Learn More\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DogCard;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"../styles/ActivityCard.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport DefaultImage from \"./DefaultImage\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass ActivityCard extends Component {\r\n  render() {\r\n    let card_image;\r\n    if (this.props.activity.image_1) {\r\n      card_image = (\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={this.props.activity.image_1}\r\n          style={{ width: \"auto\", height: \"300px\" }}\r\n        />\r\n      );\r\n    } else {\r\n      card_image = <DefaultImage name={this.props.activity.name} />;\r\n    }\r\n\r\n    return (\r\n      <Card style={{ width: \"18rem\", height: \"35rem\" }} className=\"mt-4\">\r\n        {card_image}\r\n        <Card.Body>\r\n          <Card.Title className=\"cutoff\">{this.props.activity.name}</Card.Title>\r\n          <Card.Text>\r\n            <Container>\r\n              <Row>\r\n                {this.props.activity.date != null ? (\r\n                  <div>\r\n                    <Col>\r\n                      <p align=\"left\">\r\n                        <b>Date:</b>\r\n                      </p>\r\n                    </Col>\r\n                    <Col xs=\"auto\">\r\n                      <p align=\"right\">{this.props.activity.date}</p>\r\n                    </Col>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <Col>\r\n                      <p align=\"left\">\r\n                        <b>Designation:</b>\r\n                      </p>\r\n                    </Col>\r\n                    <Col xs=\"auto\">\r\n                      <p align=\"right\">{this.props.activity.designation}</p>\r\n                    </Col>\r\n                  </div>\r\n                )}\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <p align=\"left\">\r\n                    <b>Free:</b>\r\n                  </p>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <p align=\"right\">\r\n                    {this.props.activity.is_free ? \"Yes\" : \"No\"}\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <p align=\"left\">\r\n                    <b>Location:</b>\r\n                  </p>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <p align=\"right\">{this.props.activity.location}</p>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <p align=\"left\">\r\n                    <b>Type:</b>\r\n                  </p>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <p align=\"right\" className=\"capitalize\">\r\n                    {this.props.activity.type}\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Button href={`/activities/${this.props.activity.id}`}>\r\n                    Learn More\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ActivityCard;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"../styles/BreedCard.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport DefaultImage from \"./DefaultImage\";\r\n\r\nclass BreedCard extends Component {\r\n  render() {\r\n    let card_image;\r\n    if (this.props.breed.image_1) {\r\n      card_image = (\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={this.props.breed.image_1}\r\n          style={{ width: \"auto\", height: \"300px\" }}\r\n        />\r\n      );\r\n    } else {\r\n      card_image = <DefaultImage name={this.props.breed.name} />;\r\n    }\r\n\r\n    return (\r\n      <Card style={{ width: \"18rem\", height: \"40rem\" }} className=\"mt-4\">\r\n        {card_image}\r\n        <Card.Body>\r\n          <Card.Title className=\"capitalize\">{this.props.breed.name}</Card.Title>\r\n          <Card.Text>\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  <p align=\"left\">\r\n                    <b>Group:</b>\r\n                  </p>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <p align=\"right\">{this.props.breed.group}</p>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <p align=\"left\">\r\n                    <b>Temperament:</b>\r\n                  </p>\r\n                </Col>\r\n                <Col>\r\n                  <p align=\"right\" class=\"cutoff\">\r\n                    {this.props.breed.temperament}\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <p align=\"left\">\r\n                    <b>Lifespan:</b>\r\n                  </p>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <p align=\"right\">\r\n                    {this.props.breed.min_lifespan} -{\" \"}\r\n                    {this.props.breed.max_lifespan}\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <p align=\"left\">\r\n                    <b>Height:</b>\r\n                  </p>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <p align=\"right\">\r\n                    {this.props.breed.min_height} -{\" \"}\r\n                    {this.props.breed.max_height}\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Button href={`/breeds/${this.props.breed.name}`}>\r\n                    Learn More\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BreedCard;\r\n","import React, { Component } from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport InstanceCarousel from \"./InstanceCarousel\";\r\nimport DogCard from \"./DogCard\";\r\nimport ActivityCard from \"./ActivityCard\";\r\nimport BreedCard from \"./BreedCard\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport \"../styles/Instance.css\";\r\nimport { parsePhoneNumberFromString } from 'libphonenumber-js'\r\n\r\nconst wrapper = require(\"../api_wrapper_functions/wrapper.js\").default;\r\n\r\nclass ShelterInstance extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shelterId: props.match.params.shelterId,\r\n      address: \"\",\r\n      city: \"\",\r\n      name: \"\",\r\n      phone: \"\",\r\n      state: \"\",\r\n      dog_list: [],\r\n      activity_list: [],\r\n      breed_list: [],\r\n      images: [],\r\n      loaded: false\r\n    };\r\n  }\r\n\r\n  async updateShelter() {\r\n    wrapper.getShelter(this.state.shelterId).then(response => {\r\n      console.log(response);\r\n      let shelter = response;\r\n      this.setState(\r\n        {\r\n          address: shelter[\"address\"],\r\n          city: shelter[\"city\"],\r\n          name: shelter[\"name\"],\r\n          phone: shelter[\"phone\"],\r\n          state: shelter[\"state\"]\r\n        },\r\n        () =>\r\n          wrapper.getShelterBreeds(this.state.shelterId).then(response => {\r\n            console.log(response);\r\n            this.setState(\r\n              {\r\n                breed_list: response\r\n              },\r\n              () =>\r\n                wrapper.getShelterDogs(this.state.shelterId).then(response => {\r\n                  console.log(response);\r\n                  this.setState(\r\n                    {\r\n                      dog_list: response[\"objects\"]\r\n                    },\r\n                    () =>\r\n                      wrapper\r\n                        .getShelterActivities(this.state.shelterId)\r\n                        .then(response => {\r\n                          console.log(response);\r\n                          this.setState(\r\n                            {\r\n                              activity_list: response[\"objects\"]\r\n                            },\r\n                            () => this.loadImages()\r\n                          );\r\n                        })\r\n                  );\r\n                })\r\n            );\r\n          })\r\n      );\r\n    });\r\n  }\r\n\r\n  loadImages() {\r\n    let imageArray = [];\r\n    for (let i = 0; i < this.state.dog_list.length; i++) {\r\n      let dog = this.state.dog_list[i];\r\n      if (dog[\"image_1\"] != null) {\r\n        imageArray.push(dog[\"image_1\"]);\r\n      }\r\n      if (dog[\"image_2\"] != null) {\r\n        imageArray.push(dog[\"image_2\"]);\r\n      }\r\n      if (dog[\"image_3\"] != null) {\r\n        imageArray.push(dog[\"image_3\"]);\r\n      }\r\n      if (dog[\"image_4\"] != null) {\r\n        imageArray.push(dog[\"image_4\"]);\r\n      }\r\n    }\r\n    console.log(imageArray);\r\n    this.setState({ images: imageArray, loaded: true });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.updateShelter();\r\n  }\r\n  render() {\r\n    let dogCards = [];\r\n    if (this.state.loaded) {\r\n      dogCards = this.state.dog_list.map(dog => {\r\n        return (\r\n          <div class=\"mx-auto col-md-auto offset-md-0 col-auto offset-1 mt-2\">\r\n            <DogCard dog={dog} />\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n    let breedCards = [];\r\n    if (this.state.loaded) {\r\n      breedCards = this.state.breed_list.map(breed => {\r\n        return (\r\n          <div class=\"mx-auto col-md-auto offset-md-0 col-auto offset-1 mt-2\">\r\n            <BreedCard breed={breed} />\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n    let activityCards = [];\r\n    if (this.state.loaded) {\r\n      activityCards = this.state.activity_list.map(activity => {\r\n        return (\r\n          <div class=\"mx-auto col-md-auto offset-md-0 col-auto offset-1 mt-2\">\r\n            <ActivityCard activity={activity} />\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    let breeds = [];\r\n    if (this.state.loaded) {\r\n      console.log(this.state.breed_list);\r\n      breeds = this.state.breed_list.map(breed => {\r\n        return \" \"+breed[\"name\"];\r\n      });\r\n    }\r\n\r\n    let phone_number = parsePhoneNumberFromString(\"+1\" + this.state.phone);\r\n    if (!phone_number)\r\n      phone_number = this.state.phone;\r\n    else\r\n      phone_number = phone_number.formatNational();\r\n\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <br />\r\n          <Row>\r\n            <Col>\r\n              <h1> {this.state.name}</h1>\r\n              <div class=\"info-text\">\r\n                <p align=\"left\"> Contact Information: {phone_number}</p>\r\n                <p align=\"left\"> Address: {this.state.address} </p>\r\n                <p align=\"left\">\r\n                  Location: {this.state.city}, {this.state.state}\r\n                </p>\r\n                {breeds.length > 0 ? (\r\n                  <div>\r\n                    <p align=\"left\" className=\"capitalize\"> Shelter Breeds: {\" \" + breeds}</p>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <p align=\"left\"> Shelter Breeds: None listed</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <InstanceCarousel images={this.state.images} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Container>\r\n          {dogCards.length > 0 ? (\r\n            <div>\r\n              <p align=\"left\" class=\"deck-title-text\">\r\n                {\" \"}\r\n                Dogs:{\" \"}\r\n              </p>\r\n              ,\r\n              <CardDeck>\r\n                <div class=\"card-deck\">{dogCards}</div>\r\n              </CardDeck>\r\n            </div>\r\n          ) : (\r\n            <p align=\"left\" class=\"deck-title-text\">\r\n              {\" \"}\r\n              Dogs: None\r\n            </p>\r\n          )}\r\n          {breedCards.length > 0 ? (\r\n            <div>\r\n              <p align=\"left\" class=\"deck-title-text\">\r\n                {\" \"}\r\n                Breeds:{\" \"}\r\n              </p>\r\n              <CardDeck>\r\n                <div class=\"card-deck\">{breedCards}</div>\r\n              </CardDeck>\r\n            </div>\r\n          ) : (\r\n            <p align=\"left\" class=\"deck-title-text\">\r\n              {\" \"}\r\n              Breeds: None\r\n            </p>\r\n          )}\r\n          {activityCards.length > 0 ? (\r\n            <div>\r\n              <p align=\"left\" class=\"deck-title-text\">\r\n                {\" \"}\r\n                Activities:{\" \"}\r\n              </p>\r\n              <CardDeck>\r\n                <div class=\"card-deck\">{activityCards}</div>\r\n              </CardDeck>\r\n            </div>\r\n          ) : (\r\n            <p align=\"left\" class=\"deck-title-text\">\r\n              {\" \"}\r\n              Activities: None\r\n            </p>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ShelterInstance;\r\n","import React, { Component } from \"react\";\r\nimport PageComp from \"./PageComp\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport ShelterCard from \"./ShelterCard\";\r\nimport ShelterInstance from \"./ShelterInstance\"\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst wrapper = require(\"../api_wrapper_functions/wrapper.js\").default;\r\n\r\nclass Shelters extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //initialize initial state to not loaded\r\n    this.state = {\r\n      info_loaded: false\r\n    };\r\n    this.changePage = this.changePage.bind(this);\r\n    this.updateShelter = this.updateShelter.bind(this);\r\n  }\r\n\r\n  //change page. pretty much copy paste this around, replace 'this.updateDog'\r\n  changePage(pageNum) {\r\n    this.setState(state => ({\r\n      info_loaded: false\r\n    }));\r\n    this.updateShelter(pageNum);\r\n  }\r\n\r\n  //server request method. called everytime page change, and on initial mount\r\n  async updateShelter(pageNum) {\r\n    wrapper.getShelter(undefined, pageNum).then((response) => {\r\n      this.setState(state => ({\r\n        currentPage: pageNum,\r\n        maxPage: response[\"total_pages\"],\r\n        shelterList: response[\"objects\"],\r\n        info_loaded: true\r\n      }));\r\n    });\r\n  }\r\n  //update page on initial mount to load information\r\n  async componentDidMount() {\r\n    this.changePage(1);\r\n  }\r\n  render() {\r\n    if(this.props.match.isExact) {\r\n      let shelterCards = null;\r\n      if(this.state.info_loaded)\r\n      {\r\n          shelterCards = this.state.shelterList.map(shelter => {\r\n          return (\r\n            <div class=\"mx-auto col-md-auto offset-md-0 col-auto offset-1 mt-2\">\r\n              <ShelterCard shelter={shelter} />\r\n            </div>\r\n          );\r\n        });\r\n      }\r\n      return (\r\n        <div>\r\n          <div class=\"text-center\">\r\n            <h1> Shelters</h1>\r\n          </div>\r\n          <Container>\r\n            {this.state.info_loaded && \r\n              <CardDeck>\r\n                <div class=\"card-deck\">{shelterCards}</div>\r\n              </CardDeck>\r\n            }\r\n          </Container>\r\n          <PageComp\r\n            currentPage={this.state.currentPage}\r\n            maxPage={this.state.maxPage}\r\n            changePage={this.changePage}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (<Route path={`${this.props.match.path}/:shelterId`} component={ShelterInstance} />);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Shelters;\r\n","import React, { Component } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport InstanceCarousel from \"./InstanceCarousel\";\r\nimport \"../styles/Instance.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ActivityCard from \"./ActivityCard\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\n\r\nconst wrapper = require(\"../api_wrapper_functions/wrapper.js\").default;\r\n\r\nclass DogInstance extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dogId: props.match.params.dogId,\r\n      description: \"\",\r\n      shelter: \"\",\r\n      shelter_id: \"\",\r\n      breed: \"\",\r\n      age: \"\",\r\n      size: \"\",\r\n      name: \"\",\r\n      img1: null,\r\n      img2: null,\r\n      img3: null,\r\n      img4: null,\r\n      images: [],\r\n      nearby_activities: [],\r\n      loaded_shelter: false,\r\n      loaded_dog: false,\r\n      loaded_activities: false\r\n    };\r\n    this.isLoaded = this.isLoaded.bind(this);\r\n  }\r\n  async updateDog() {\r\n    wrapper.getDogShelter(this.state.dogId).then(response => {\r\n      this.setState(state => ({\r\n        shelter_id: response[\"id\"],\r\n        shelter: response[\"name\"],\r\n        loaded_shelter: true\r\n      }));\r\n    });\r\n    wrapper.getDog(this.state.dogId, undefined).then(response => {\r\n      //console.log(response);\r\n      this.setState(state => ({\r\n        description: response[\"description\"],\r\n        breed: response[\"breed\"],\r\n        age: response[\"age\"],\r\n        size: response[\"size\"],\r\n        name: response[\"name\"],\r\n        img1: response[\"image_1\"],\r\n        img2: response[\"image_2\"],\r\n        img3: response[\"image_3\"],\r\n        img4: response[\"image_4\"],\r\n        loaded_dog: true\r\n      }));\r\n      let imageArray = [];\r\n      if (this.state.img1 != null) {\r\n        imageArray.push(this.state.img1);\r\n      }\r\n      if (this.state.img2 != null) {\r\n        imageArray.push(this.state.img2);\r\n      }\r\n      if (this.state.img3 != null) {\r\n        imageArray.push(this.state.img3);\r\n      }\r\n      if (this.state.img4 != null) {\r\n        imageArray.push(this.state.img4);\r\n      }\r\n\r\n      this.setState({ images: imageArray });\r\n\r\n      wrapper.getDogActivities(this.state.dogId).then(response => {\r\n        this.setState(state => ({\r\n          nearby_activities: response[\"objects\"],\r\n          loaded_activities: true\r\n        }));\r\n      });\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.updateDog();\r\n  }\r\n\r\n  isLoaded() {\r\n    return (\r\n      this.state.loaded_activities &&\r\n      this.state.loaded_dog &&\r\n      this.state.loaded_shelter\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let activityCards = [];\r\n    if (this.isLoaded()) {\r\n      activityCards = this.state.nearby_activities.map(activity => {\r\n        return (\r\n          <div class=\"mx-auto col-md-auto offset-md-0 col-auto offset-1 mt-2\">\r\n            <ActivityCard activity={activity} />\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <br />\r\n          <Row>\r\n            <Col>\r\n              <h1> {this.state.name}</h1>\r\n              <div class=\"info-text\">\r\n                <p align=\"left\" className=\"mt-5\">\r\n                  Shelter:{\" \"}\r\n                  <Link to={`/shelters/${this.state.shelter_id}`}>\r\n                    {this.state.shelter}\r\n                  </Link>\r\n                </p>\r\n                <p align=\"left\" className=\"capitalize\">\r\n                  Breed:{\" \"}\r\n                  <Link to={`/breeds/${this.state.breed}`}>\r\n                    {this.state.breed}\r\n                  </Link>\r\n                </p>\r\n                <p align=\"left\"> Age: {this.state.age}</p>\r\n                <p align=\"left\"> Size: {this.state.size}</p>\r\n              </div>\r\n            </Col>\r\n            <Col xs={12} md={7} lg={6}>\r\n              <InstanceCarousel images={this.state.images} />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Container>\r\n              <div class=\"desc-text\">\r\n                <p align=\"left\">{this.state.description}</p>\r\n              </div>\r\n            </Container>\r\n          </Row>\r\n\r\n          {activityCards.length > 0 ? (\r\n            <div>\r\n              <p align=\"left\" class=\"deck-title-text\">\r\n                Activities:\r\n              </p>\r\n              <CardDeck>\r\n                <div class=\"card-deck\">{activityCards}</div>\r\n              </CardDeck>\r\n            </div>\r\n          ) : (\r\n            <p align=\"left\" class=\"deck-title-text\">\r\n              Activities: None\r\n            </p>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DogInstance;\r\n","import React, { Component } from \"react\";\r\nimport PageComp from \"./PageComp\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport DogCard from \"./DogCard\";\r\nimport DogInstance from \"./DogInstance\"\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst wrapper = require(\"../api_wrapper_functions/wrapper.js\").default;\r\n\r\nclass Dogs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //initialize initial state to not loaded\r\n    this.state = {\r\n      info_loaded: false\r\n    };\r\n    this.changePage = this.changePage.bind(this);\r\n    this.updateDog = this.updateDog.bind(this);\r\n  }\r\n\r\n  //change page. pretty much copy paste this around, replace 'this.updateDog'\r\n  changePage(pageNum) {\r\n    this.setState(state => ({\r\n      info_loaded: false\r\n    }));\r\n    this.updateDog(pageNum);\r\n  }\r\n\r\n  //server request method. called everytime page change, and on initial mount\r\n  async updateDog(pageNum) {\r\n    wrapper.getDog(undefined, pageNum).then((response) => {\r\n      this.setState(state => ({\r\n        currentPage: pageNum,\r\n        maxPage: response[\"total_pages\"],\r\n        dogList: response[\"objects\"],\r\n        info_loaded: true\r\n      }));\r\n    });\r\n  }\r\n  //update page on initial mount to load information\r\n  async componentDidMount() {\r\n    this.changePage(1);\r\n  }\r\n\r\n  render() {\r\n    if(this.props.match.isExact) {\r\n      let dogCards = null;\r\n      if(this.state.info_loaded) {\r\n          dogCards = this.state.dogList.map(dog => {\r\n          return (\r\n            <div class=\"mx-auto col-md-auto offset-md-0 col-auto offset-1 mt-2\">\r\n              <DogCard dog={dog}/>\r\n            </div>\r\n          );\r\n        });\r\n      }\r\n      return (\r\n          <div>\r\n            <div class=\"text-center\">\r\n              <h1> Dogs</h1>\r\n            </div>\r\n            <Container>\r\n              {this.state.info_loaded && \r\n                <CardDeck>\r\n                  <div class=\"card-deck\">{dogCards}</div>\r\n                </CardDeck>\r\n              }\r\n            </Container>\r\n            <PageComp\r\n              currentPage={this.state.currentPage}\r\n              maxPage={this.state.maxPage}\r\n              changePage={this.changePage}\r\n            />\r\n          </div>\r\n      );\r\n    }\r\n    else {\r\n      return (<Route path={`${this.props.match.path}/:dogId`} component={DogInstance} />);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Dogs;\r\n","import React, { Component } from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport InstanceCarousel from \"./InstanceCarousel\";\r\nimport DogCard from \"./DogCard\";\r\nimport ActivityCard from \"./ActivityCard\";\r\nimport ShelterCard from \"./ShelterCard\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport \"../styles/Instance.css\";\r\n\r\nconst wrapper = require(\"../api_wrapper_functions/wrapper.js\").default;\r\n\r\nclass BreedInstance extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      breedId: props.match.params.breedId,\r\n      name: \"\",\r\n      temperament: \"\",\r\n      max_height: \"\",\r\n      min_height: \"\",\r\n      max_weight: \"\",\r\n      min_weight: \"\",\r\n      max_lifespan: \"\",\r\n      min_lifespan: \"\",\r\n      image_1: null,\r\n      image_2: null,\r\n      image_3: null,\r\n      image_4: null,\r\n      group: \"\",\r\n      dog_list: [],\r\n      activity_list: [],\r\n      shelter_list: [],\r\n      images: [],\r\n      loaded: false\r\n    };\r\n  }\r\n\r\n  async updateBreed() {\r\n    wrapper.getBreed(this.state.breedId).then(response => {\r\n      console.log(response);\r\n      let breed = response[\"objects\"][0];\r\n      this.setState(\r\n        {\r\n          name: breed[\"name\"],\r\n          temperament: breed[\"temperament\"],\r\n          max_height: breed[\"max_height\"],\r\n          min_height: breed[\"min_height\"],\r\n          max_weight: breed[\"max_weight\"],\r\n          min_weight: breed[\"min_weight\"],\r\n          max_lifespan: breed[\"max_lifespan\"],\r\n          min_lifespan: breed[\"min_lifespan\"],\r\n          image_1: breed[\"image_1\"],\r\n          image_2: breed[\"image_2\"],\r\n          image_3: breed[\"image_3\"],\r\n          image_4: breed[\"image_4\"],\r\n          group: breed[\"group\"]\r\n        },\r\n        () =>\r\n          wrapper.getBreedShelters(this.state.name).then(response => {\r\n            console.log(response);\r\n            this.setState(\r\n              {\r\n                shelter_list: response[\"objects\"]\r\n              },\r\n              () =>\r\n                wrapper\r\n                  .getBreedDogs(this.state.name, undefined)\r\n                  .then(response => {\r\n                    console.log(response);\r\n                    this.setState(\r\n                      {\r\n                        dog_list: response[\"objects\"]\r\n                      },\r\n                      () =>\r\n                        wrapper\r\n                          .getBreedActivities(this.state.name)\r\n                          .then(response => {\r\n                            console.log(response);\r\n                            this.setState({\r\n                              activity_list: response[\"objects\"]\r\n                            });\r\n                          })\r\n                    );\r\n                  })\r\n            );\r\n          })\r\n      );\r\n      let imageArray = [];\r\n      if (this.state.image_1 != null) {\r\n        imageArray.push(this.state.image_1);\r\n      }\r\n      if (this.state.image_2 != null) {\r\n        imageArray.push(this.state.image_2);\r\n      }\r\n      if (this.state.image_3 != null) {\r\n        imageArray.push(this.state.image_3);\r\n      }\r\n      if (this.state.image_4 != null) {\r\n        imageArray.push(this.state.image_4);\r\n      }\r\n      this.setState({ images: imageArray, loaded: true });\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.updateBreed();\r\n  }\r\n  render() {\r\n    let dogCards = [];\r\n    if (this.state.loaded) {\r\n      dogCards = this.state.dog_list.map(dog => {\r\n        return (\r\n          <div class=\"mx-auto col-md-auto offset-md-0 col-auto offset-1 mt-2\">\r\n            <DogCard dog={dog} />\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n    let shelterCards = [];\r\n    if (this.state.loaded) {\r\n      shelterCards = this.state.shelter_list.map(shelter => {\r\n        return (\r\n          <div class=\"mx-auto col-md-auto offset-md-0 col-auto offset-1 mt-2\">\r\n            <ShelterCard shelter={shelter} />\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n    let activityCards = [];\r\n    if (this.state.loaded) {\r\n      activityCards = this.state.activity_list.map(activity => {\r\n        return (\r\n          <div class=\"mx-auto col-md-auto offset-md-0 col-auto offset-1 mt-2\">\r\n            <ActivityCard activity={activity} />\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <br />\r\n          <Row>\r\n            <Col>\r\n              <h1 className=\"capitalize\"> {this.state.name}</h1>\r\n              <div class=\"info-text\">\r\n                <p align=\"left\"> Group: {this.state.group}</p>\r\n                <p align=\"left\"> Temperament: {this.state.temperament}</p>\r\n                <p align=\"left\">\r\n                  {\" \"}\r\n                  Lifespan: {this.state.min_lifespan}-{this.state.max_lifespan}\r\n                </p>\r\n                <p align=\"left\">\r\n                  {\" \"}\r\n                  Height: {this.state.min_height}-{this.state.max_height} inches\r\n                </p>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <InstanceCarousel images={this.state.images} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Container>\r\n          {dogCards.length > 0 ? (\r\n            <div>\r\n              <p align=\"left\" class=\"deck-title-text\">\r\n                {\" \"}\r\n                Dogs:{\" \"}\r\n              </p>\r\n              <CardDeck>\r\n                <div class=\"card-deck\">{dogCards}</div>\r\n              </CardDeck>\r\n            </div>\r\n          ) : (\r\n            <p align=\"left\" class=\"deck-title-text\">\r\n              {\" \"}\r\n              Dogs: None\r\n            </p>\r\n          )}\r\n          {shelterCards.length > 0 ? (\r\n            <div>\r\n              <p align=\"left\" class=\"deck-title-text\">\r\n                {\" \"}\r\n                Shelters:{\" \"}\r\n              </p>\r\n              <CardDeck>\r\n                <div class=\"card-deck\">{shelterCards}</div>\r\n              </CardDeck>\r\n            </div>\r\n          ) : (\r\n            <p align=\"left\" class=\"deck-title-text\">\r\n              {\" \"}\r\n              Shelters: None\r\n            </p>\r\n          )}\r\n          {activityCards.length > 0 ? (\r\n            <div>\r\n              <p align=\"left\" class=\"deck-title-text\">\r\n                {\" \"}\r\n                Activities:{\" \"}\r\n              </p>\r\n              (\r\n              <CardDeck>\r\n                <div class=\"card-deck\">{activityCards}</div>\r\n              </CardDeck>\r\n            </div>\r\n          ) : (\r\n            <p align=\"left\" class=\"deck-title-text\">\r\n              {\" \"}\r\n              Activities: None\r\n            </p>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default BreedInstance;\r\n","import React, { Component } from \"react\";\r\nimport PageComp from \"./PageComp\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport BreedCard from \"./BreedCard\";\r\nimport BreedInstance from \"./BreedInstance\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst wrapper = require(\"../api_wrapper_functions/wrapper.js\").default;\r\n\r\nclass Breeds extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //initialize initial state to not loaded\r\n    this.state = {\r\n      currentPage: 1,\r\n      info_loaded: false\r\n    };\r\n    this.changePage = this.changePage.bind(this);\r\n    this.updateDog = this.updateBreed.bind(this);\r\n  }\r\n  //change page. pretty much copy paste this around, replace 'this.updateDog'\r\n  changePage(pageNum) {\r\n    this.setState(state => ({\r\n      currentPage: pageNum\r\n    }));\r\n  }\r\n\r\n  //server request method. called everytime page change, and on initial mount\r\n  async updateBreed() {\r\n    wrapper.getBreed().then(response => {\r\n      this.setState(state => ({\r\n        maxPage:\r\n          Math.floor(response[\"num_results\"] / 20) +\r\n          (response[\"num_results\"] % 20 ? 1 : 0),\r\n        breedList: response[\"objects\"],\r\n        info_loaded: true\r\n      }));\r\n    });\r\n  }\r\n  async componentDidMount() {\r\n    this.updateBreed();\r\n  }\r\n  render() {\r\n    if (this.props.match.isExact) {\r\n      let breedCards = [];\r\n      if (this.state.info_loaded) {\r\n        let start = (this.state.currentPage - 1) * 20;\r\n        let end =\r\n          start + 20 < this.state.breedList.length\r\n            ? start + 20\r\n            : this.state.breedList.length;\r\n        breedCards = this.state.breedList.slice(start, end).map(breed => {\r\n          return (\r\n            <div class=\"mx-auto col-md-auto offset-md-0 col-auto offset-1 mt-2\">\r\n              <BreedCard breed={breed} />\r\n            </div>\r\n          );\r\n        });\r\n      }\r\n      return (\r\n        <div>\r\n          <div class=\"text-center\">\r\n            <h1> Breeds</h1>\r\n          </div>\r\n          <Container>\r\n            {this.state.info_loaded && (\r\n              <CardDeck>\r\n                <div class=\"card-deck\">{breedCards}</div>\r\n              </CardDeck>\r\n            )}\r\n          </Container>\r\n          <PageComp\r\n            currentPage={this.state.currentPage}\r\n            maxPage={this.state.maxPage}\r\n            changePage={this.changePage}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <Route\r\n          path={`${this.props.match.path}/:breedId`}\r\n          component={BreedInstance}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Breeds;\r\n","import React, { Component } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport InstanceCarousel from \"./InstanceCarousel\";\r\nimport \"../styles/Instance.css\";\r\nimport DogCard from \"./DogCard\";\r\nimport ShelterCard from \"./ShelterCard\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\n\r\nconst wrapper = require(\"../api_wrapper_functions/wrapper.js\").default;\r\n\r\nclass ActivityInstance extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activityId: props.match.params.activityId,\r\n      date: \"\",\r\n      description: \"\",\r\n      designation: \"\",\r\n      image_1: null,\r\n      image_2: null,\r\n      image_3: null,\r\n      is_active: null,\r\n      is_free: null,\r\n      latitude: null,\r\n      location: \"\",\r\n      name: \"\",\r\n      type: \"\",\r\n      url: \"\",\r\n      images: [],\r\n      shelter_list: [],\r\n      dog_list: [],\r\n      weather: null,\r\n      loaded_activity: false,\r\n      loaded_shelter: false,\r\n      loaded_dog: false\r\n    };\r\n    this.isLoaded = this.isLoaded.bind(this);\r\n  }\r\n  async updateActivity() {\r\n    wrapper.getActivity(this.state.activityId).then(response => {\r\n      console.log(response[\"location\"]);\r\n      let comma = response[\"location\"].substring(0, 2);\r\n      if (comma === \", \") {\r\n        this.setState({\r\n          location: response[\"location\"].substring(\r\n            2,\r\n            response[\"location\"].length\r\n          )\r\n        });\r\n      } else {\r\n        this.setState({ location: response[\"location\"] });\r\n      }\r\n\r\n      this.setState(state => ({\r\n        date: response[\"date\"],\r\n        description: response[\"description\"],\r\n        designation: response[\"designation\"],\r\n        image_1: response[\"image_1\"],\r\n        image_2: response[\"image_2\"],\r\n        image_3: response[\"image_3\"],\r\n        is_active: response[\"is_active\"],\r\n        is_free: response[\"is_free\"],\r\n        latitude: response[\"latitude\"],\r\n        name: response[\"name\"],\r\n        type: response[\"type\"],\r\n        url: response[\"url\"],\r\n        weather: response[\"weather\"],\r\n        loaded_activity: true\r\n      }));\r\n      let imageArray = [];\r\n      if (this.state.image_1 != null) {\r\n        imageArray.push(this.state.image_1);\r\n      }\r\n      if (this.state.image_2 != null) {\r\n        imageArray.push(this.state.image_2);\r\n      }\r\n      if (this.state.image_3 != null) {\r\n        imageArray.push(this.state.image_3);\r\n      }\r\n      if (this.state.image_4 != null) {\r\n        imageArray.push(this.state.image_4);\r\n      }\r\n\r\n      this.setState({ images: imageArray });\r\n    });\r\n    wrapper.getActivityShelters(this.state.activityId).then(response => {\r\n      this.setState(state => ({\r\n        shelter_list: response[\"objects\"],\r\n        loaded_shelter: true\r\n      }));\r\n    });\r\n    wrapper.getActivityDogs(this.state.activityId, 0.25).then(response => {\r\n      this.setState(state => ({\r\n        dog_list: response,\r\n        loaded_dog: true\r\n      }));\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.updateActivity();\r\n  }\r\n\r\n  isLoaded() {\r\n    return (\r\n      this.state.loaded_activity &&\r\n      this.state.loaded_dog &&\r\n      this.state.loaded_shelter\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let dogCards = [];\r\n    if (this.isLoaded()) {\r\n      dogCards = this.state.dog_list.map(dog => {\r\n        return (\r\n          <div class=\"mx-auto col-md-auto offset-md-0 col-auto offset-1 mt-2\">\r\n            <DogCard dog={dog} />\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n    let shelterCards = [];\r\n    if (this.isLoaded()) {\r\n      shelterCards = this.state.shelter_list.map(shelter => {\r\n        return (\r\n          <div class=\"mx-auto col-md-auto offset-md-0 col-auto offset-1 mt-2\">\r\n            <ShelterCard shelter={shelter} />\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <br />\r\n          <Row>\r\n            <Col>\r\n              <h1> {this.state.name}</h1>\r\n              <div class=\"info-text\">\r\n                <p align=\"left\" className=\"mt-5\">\r\n                  URL: <a href={this.state.url}>{this.state.url}></a>\r\n                </p>\r\n\r\n                {this.state.date != null ? (\r\n                  <div>\r\n                    <p align=\"left\">Date: {this.state.date}</p>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <p align=\"left\">Designation: {this.state.designation}</p>\r\n                  </div>\r\n                )}\r\n                <p align=\"left\" className=\"capitalize\">\r\n                  {\" \"}\r\n                  Type: {this.state.type}\r\n                </p>\r\n\r\n                <p align=\"left\"> Free: {this.state.is_free ? \"Yes\" : \"No\"}</p>\r\n                <p align=\"left\"> Location: {this.state.location}</p>\r\n              </div>\r\n            </Col>\r\n            <Col xs={12} md={7} lg={6}>\r\n              <InstanceCarousel images={this.state.images} />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Container className=\"mt-5\">\r\n              <div class=\"desc-text\">\r\n                <p align=\"left\">{this.state.description}</p>\r\n              </div>\r\n            </Container>\r\n          </Row>\r\n\r\n          {dogCards.length > 0 ? (\r\n            <div>\r\n              <p align=\"left\" class=\"deck-title-text\">\r\n                Dogs:\r\n              </p>\r\n              <CardDeck>\r\n                <div class=\"card-deck\">{dogCards}</div>\r\n              </CardDeck>\r\n            </div>\r\n          ) : (\r\n            <p align=\"left\" class=\"deck-title-text\">\r\n              Dogs: None\r\n            </p>\r\n          )}\r\n          {shelterCards.length > 0 ? (\r\n            <div>\r\n              <p align=\"left\" class=\"deck-title-text\">\r\n                Shelters:\r\n              </p>\r\n              <CardDeck>\r\n                <div class=\"card-deck\">{shelterCards}</div>\r\n              </CardDeck>\r\n            </div>\r\n          ) : (\r\n            <p align=\"left\" class=\"deck-title-text\">\r\n              Shelters: None\r\n            </p>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ActivityInstance;\r\n","import React, { Component } from \"react\";\r\nimport PageComp from \"./PageComp\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport ActivityCard from \"./ActivityCard\";\r\nimport ActivityInstance from \"./ActivityInstance\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst wrapper = require(\"../api_wrapper_functions/wrapper.js\").default;\r\n\r\nclass Activities extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //initialize initial state to not loaded\r\n    this.state = {\r\n      info_loaded: false\r\n    };\r\n    this.changePage = this.changePage.bind(this);\r\n    this.updateDog = this.updateActivity.bind(this);\r\n  }\r\n\r\n  //change page. pretty much copy paste this around, replace 'this.updateDog'\r\n  changePage(pageNum) {\r\n    this.setState(state => ({\r\n      info_loaded: false\r\n    }));\r\n    this.updateActivity(pageNum);\r\n  }\r\n\r\n  //server request method. called everytime page change, and on initial mount\r\n  async updateActivity(pageNum) {\r\n    wrapper.getActivity(undefined, pageNum).then(response => {\r\n      this.setState(state => ({\r\n        currentPage: pageNum,\r\n        maxPage: response[\"total_pages\"],\r\n        activityList: response[\"objects\"],\r\n        info_loaded: true\r\n      }));\r\n    });\r\n  }\r\n\r\n  //update page on initial mount to load information\r\n  async componentDidMount() {\r\n    this.changePage(1);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.match.isExact) {\r\n      let activityCards = null;\r\n      if (this.state.info_loaded) {\r\n        activityCards = this.state.activityList.map(activity => {\r\n          return (\r\n            <div class=\"mx-auto col-md-auto offset-md-0 col-auto offset-1 mt-2\">\r\n              <ActivityCard activity={activity} />\r\n            </div>\r\n          );\r\n        });\r\n        console.log(this.state.activityList);\r\n      }\r\n      return (\r\n        <div>\r\n          <div class=\"text-center\">\r\n            <h1> Activities</h1>\r\n          </div>\r\n          <Container>\r\n            {this.state.info_loaded && (\r\n              <CardDeck>\r\n                <div class=\"card-deck\">{activityCards}</div>\r\n              </CardDeck>\r\n            )}\r\n          </Container>\r\n          <PageComp\r\n            currentPage={this.state.currentPage}\r\n            maxPage={this.state.maxPage}\r\n            changePage={this.changePage}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <Route\r\n          path={`${this.props.match.path}/:activityId`}\r\n          component={ActivityInstance}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Activities;\r\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport \"../styles/Error404.css\";\n\nclass Error404 extends Component {\n  render() {\n    return (\n    <Container>\n      <div className=\"text-center\">\n        <h1 className=\"display-2 error-header mt-2\">404 ERROR</h1>\n        <img className=\"error-dog\" src=\"images/404dog.jpg\"></img>\n        <div className=\"error-text\">Sorry, but the page you're looking for doesn't exist!</div>\n        {/* TODO: Add a back button? */}\n      </div>\n    </Container>\n    );\n  }\n}\n\nexport default Error404;\n","import React, { Component } from \"react\";\r\nimport \"./styles/App.css\";\r\nimport CustomNavbar from \"./Components/CustomNavbar\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport About from \"./Components/About\";\r\nimport Home from \"./Components/Home\";\r\nimport Shelters from \"./Components/Shelters\";\r\nimport Dogs from \"./Components/Dogs\";\r\nimport Breeds from \"./Components/Breeds\";\r\nimport Activities from \"./Components/Activities\";\r\nimport NoMatch from \"./Components/Error404\";\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <CustomNavbar />\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/shelters\" component={Shelters} />\r\n            <Route path=\"/dogs\" component={Dogs} />\r\n            <Route path=\"/breeds\" component={Breeds} />\r\n            <Route path=\"/activities\" component={Activities} />\r\n            <Route exact path=\"/about\" component={About} />\r\n            <Route component={NoMatch} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}